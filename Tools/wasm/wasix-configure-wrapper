#!/bin/bash
set -e

# function
usage() {
    echo "wasi-env - Run command with WASI-SDK"
    echo ""
    echo "wasi-env is a helper to set various environment variables to"
    echo "run configure and make with WASI-SDK. A WASI-SDK must be either"
    echo "installed at /opt/wasi-sdk or the env var 'WASI_SDK_PATH' must"
    echo "set to the root of a WASI-SDK."
    echo ""
    echo "Usage: wasi-env command [...]"
    echo ""
    echo "    -h --help     display this help and exit"
    echo ""
}

if [[ -z "${WASI_SDK_PATH}" ]]; then
    echo "WASI_SDK_PATH environment variable is not set."
    exit 1
fi

if [[ -z "${WASIX_SYSROOT}" ]]; then
    echo "WASIX_SYSROOT environment variable is not set."
    exit 1
fi

case $1 in
    -h|--help)
        usage
        exit
        ;;
esac

if test -z "$1"; then
    echo "ERROR: command required" >&2
    usage
    exit 1
fi

if ! test -x "${WASI_SDK_PATH}/bin/clang"; then
    echo "Error: ${WASI_SDK_PATH}/bin/clang does not exist." >&2
    exit 2
fi

export LIBLZMA_CFLAGS=$WASIX_LIBLZMA_CFLAGS
export LIBLZMA_LIBS=$WASIX_LIBLZMA_LIBS

export ZLIB_CFLAGS=$WASIX_ZLIB_CFLAGS
export ZLIB_LIBS=$WASIX_ZLIB_LIBS

export LIBUUID_CFLAGS=$WASIX_LIBUUID_CFLAGS
export LIBUUID_LIBS=$WASIX_LIBUUID_LIBS

export LIBREADLINE_CFLAGS=$WASIX_LIBREADLINE_CFLAGS
export LIBREADLINE_LIBS=$WASIX_LIBREADLINE_LIBS

export RANLIB="$WASI_SDK_PATH/bin/ranlib"
export AR="$WASI_SDK_PATH/bin/ar"
export NM="$WASI_SDK_PATH/bin/nm"
export CC="$WASI_SDK_PATH/bin/clang --sysroot=$WASIX_SYSROOT --target=wasm32-wasi"
export CXX="$WASI_SDK_PATH/bin/clang --sysroot=$WASIX_SYSROOT --target=wasm32-wasi"

export LD="$WASI_SDK_PATH/bin/wasm-ld"

export CFLAGS="\
--sysroot=$WASIX_SYSROOT \
--target=wasm32-wasi \
-matomics \
-mbulk-memory \
-mmutable-globals \
-pthread \
-mthread-model posix \
-ftls-model=local-exec \
-fno-trapping-math \
-D_WASI_EMULATED_MMAN \
-D_WASI_EMULATED_SIGNAL \
-D_WASI_EMULATED_PROCESS_CLOCKS \
-Os -g -flto"

export LIBS="\
-Wl,--shared-memory \
-Wl,--max-memory=4294967296 \
-Wl,--import-memory \
-Wl,--export-dynamic \
-Wl,--export=__heap_base \
-Wl,--export=__stack_pointer \
-Wl,--export=__data_end \
-Wl,--export=__wasm_init_tls \
-Wl,--export=__wasm_signal \
-Wl,--export=__tls_size \
-Wl,--export=__tls_align \
-Wl,--export=__tls_base \
-lwasi-emulated-mman" 

echo $WASIX_INSTALL

"$@" --with-openssl=$OPENSSL_DIR --prefix=$WASIX_INSTALL/cpython